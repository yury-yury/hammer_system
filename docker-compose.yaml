---
version: "3.9"

services:

  api:
    build:
      context: .
    container_name: api
    command: python manage.py runserver 0.0.0.0:8000
    ports:
      - "8000:8000"
    volumes:
      - ${DIR_HOME}/.env:/hammer_system_2/.env
    depends_on:
      postgres:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully

  migrations:
    build:
      context: .
    container_name: migrations
    volumes:
       - ${DIR_HOME}/.env:/hammer_system_2/.env

    command: python3 manage.py migrate

    depends_on:
      postgres:
        condition: service_healthy

  postgres:
      image: postgres:15.0-alpine

      environment:
        POSTGRES_DB: ${DB_NAME}
        POSTGRES_USER: ${DB_USER}
        POSTGRES_PASSWORD: ${DB_PASSWORD}

      restart: always

      container_name: postgres

      volumes:
        - ${DIR_HOME}/postgresdata:/var/lib/postgresql/data
      healthcheck:
        test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
        interval: 5s
        timeout: 5s
        retries: 15
...